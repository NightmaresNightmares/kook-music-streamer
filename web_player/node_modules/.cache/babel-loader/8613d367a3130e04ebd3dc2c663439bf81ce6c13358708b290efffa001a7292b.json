{"ast":null,"code":"var _jsxFileName = \"F:\\\\Test\\\\simple-kook-voice\\\\web_player\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport HeaderBar from './HeaderBar';\nimport PlayerBar from './PlayerBar';\nimport Content from './Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction extractPlaylistId(input) {\n  // 支持直接输入ID或网易云歌单链接\n  const match = input.match(/id=(\\d+)/) || input.match(/playlist\\/(\\d+)/) || input.match(/(\\d{6,})/);\n  return match ? match[1] : null;\n}\nfunction App() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isStopped, setIsStopped] = useState(true);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // 处理HeaderBar输入\n  const handleInput = async input => {\n    try {\n      var _data$result, _urlData$data$;\n      // 判断是否为歌单\n      const playlistId = extractPlaylistId(input);\n      if (playlistId && (input.includes('playlist') || input.includes('id=') || /\\d{6,}/.test(input))) {\n        // 歌单批量推流\n        const res = await fetch(`https://music-api.focalors.ltd/playlist/track/all?id=${playlistId}`);\n        const data = await res.json();\n        const ids = (data.songs || []).map(song => song.id);\n        if (!ids.length) {\n          alert('未获取到歌单歌曲');\n          return;\n        }\n        const urlRes = await fetch(`https://music-api.focalors.ltd/song/url?id=${ids.join(',')}`);\n        const urlData = await urlRes.json();\n        const urls = urlData.data.map(item => item.url).filter(Boolean);\n        if (!urls.length) {\n          alert('未获取到任何可用直链');\n          return;\n        }\n        await fetch('/api/add_batch', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            musics: urls\n          })\n        });\n        alert('歌单已全部加入播放队列！');\n        setRefreshKey(k => k + 1);\n        return;\n      }\n      // 否则视为歌名，搜索并点播第一首\n      const res = await fetch(`https://music-api.focalors.ltd/cloudsearch?keywords=${encodeURIComponent(input)}`);\n      const data = await res.json();\n      const song = (((_data$result = data.result) === null || _data$result === void 0 ? void 0 : _data$result.songs) || [])[0];\n      if (!song) {\n        alert('未搜索到歌曲');\n        return;\n      }\n      const urlRes = await fetch(`https://music-api.focalors.ltd/song/url?id=${song.id}`);\n      const urlData = await urlRes.json();\n      const url = (_urlData$data$ = urlData.data[0]) === null || _urlData$data$ === void 0 ? void 0 : _urlData$data$.url;\n      if (url) {\n        await fetch('/api/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            music: url\n          })\n        });\n        alert(`已发送到机器人播放：${song.name}`);\n        setRefreshKey(k => k + 1);\n      } else {\n        alert('获取直链失败');\n      }\n    } catch (e) {\n      alert('前端请求出错，请查看控制台详细信息');\n      console.error('[前端异常] handleInput:', e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cloudmusic-root\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cloudmusic-main\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n        onSubmit: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cloudmusic-content\",\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          refreshKey: refreshKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerBar, {\n        isPlaying: isPlaying,\n        setIsPlaying: setIsPlaying,\n        isStopped: isStopped,\n        setIsStopped: setIsStopped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Un2INMQagkFDdkOYHBpFrbpIORQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","HeaderBar","PlayerBar","Content","jsxDEV","_jsxDEV","extractPlaylistId","input","match","App","_s","isPlaying","setIsPlaying","isStopped","setIsStopped","refreshKey","setRefreshKey","handleInput","_data$result","_urlData$data$","playlistId","includes","test","res","fetch","data","json","ids","songs","map","song","id","length","alert","urlRes","join","urlData","urls","item","url","filter","Boolean","method","headers","body","JSON","stringify","musics","k","encodeURIComponent","result","music","name","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["F:/Test/simple-kook-voice/web_player/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport HeaderBar from './HeaderBar';\r\nimport PlayerBar from './PlayerBar';\r\nimport Content from './Content';\r\n\r\nfunction extractPlaylistId(input) {\r\n  // 支持直接输入ID或网易云歌单链接\r\n  const match = input.match(/id=(\\d+)/) || input.match(/playlist\\/(\\d+)/) || input.match(/(\\d{6,})/);\r\n  return match ? match[1] : null;\r\n}\r\n\r\nfunction App() {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isStopped, setIsStopped] = useState(true);\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n  // 处理HeaderBar输入\r\n  const handleInput = async (input) => {\r\n    try {\r\n      // 判断是否为歌单\r\n      const playlistId = extractPlaylistId(input);\r\n      if (playlistId && (input.includes('playlist') || input.includes('id=') || /\\d{6,}/.test(input))) {\r\n        // 歌单批量推流\r\n        const res = await fetch(`https://music-api.focalors.ltd/playlist/track/all?id=${playlistId}`);\r\n        const data = await res.json();\r\n        const ids = (data.songs || []).map(song => song.id);\r\n        if (!ids.length) {\r\n          alert('未获取到歌单歌曲');\r\n          return;\r\n        }\r\n        const urlRes = await fetch(`https://music-api.focalors.ltd/song/url?id=${ids.join(',')}`);\r\n        const urlData = await urlRes.json();\r\n        const urls = urlData.data.map(item => item.url).filter(Boolean);\r\n        if (!urls.length) {\r\n          alert('未获取到任何可用直链');\r\n          return;\r\n        }\r\n        await fetch('/api/add_batch', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ musics: urls })\r\n        });\r\n        alert('歌单已全部加入播放队列！');\r\n        setRefreshKey(k => k + 1);\r\n        return;\r\n      }\r\n      // 否则视为歌名，搜索并点播第一首\r\n      const res = await fetch(`https://music-api.focalors.ltd/cloudsearch?keywords=${encodeURIComponent(input)}`);\r\n      const data = await res.json();\r\n      const song = (data.result?.songs || [])[0];\r\n      if (!song) {\r\n        alert('未搜索到歌曲');\r\n        return;\r\n      }\r\n      const urlRes = await fetch(`https://music-api.focalors.ltd/song/url?id=${song.id}`);\r\n      const urlData = await urlRes.json();\r\n      const url = urlData.data[0]?.url;\r\n      if (url) {\r\n        await fetch('/api/add', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ music: url })\r\n        });\r\n        alert(`已发送到机器人播放：${song.name}`);\r\n        setRefreshKey(k => k + 1);\r\n      } else {\r\n        alert('获取直链失败');\r\n      }\r\n    } catch (e) {\r\n      alert('前端请求出错，请查看控制台详细信息');\r\n      console.error('[前端异常] handleInput:', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cloudmusic-root\">\r\n      <Sidebar />\r\n      <div className=\"cloudmusic-main\">\r\n        <HeaderBar onSubmit={handleInput} />\r\n        <div className=\"cloudmusic-content\">\r\n          <Content refreshKey={refreshKey} />\r\n        </div>\r\n        <PlayerBar isPlaying={isPlaying} setIsPlaying={setIsPlaying} isStopped={isStopped} setIsStopped={setIsStopped} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}